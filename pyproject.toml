[build-system]
requires = ['scikit-build-core', 'cffi>=1.3.0']
build-backend = 'scikit_build_core.build'

[project]
name = 'coincurve'
authors = [
    { name='Ofek Lev', email='oss@ofek.dev' },
]
description = 'Cross-platform Python CFFI bindings for libsecp256k1'
keywords = ['secp256k1', 'crypto', 'elliptic curves', 'bitcoin', 'ethereum', 'cryptocurrency']
readme = {"file" = "README.md", "content-type" = "text/markdown"}
requires-python = '>=3.8'
dependencies = [
    'asn1crypto',
    'cffi>=1.3.0'
]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Intended Audience :: Developers',
    'License :: OSI Approved :: MIT License',
    'License :: OSI Approved :: Apache Software License',
    'Natural Language :: English',
    'Operating System :: OS Independent',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.7',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: Implementation :: CPython',
    'Programming Language :: Python :: Implementation :: PyPy',
    'Topic :: Software Development :: Libraries',
    'Topic :: Security :: Cryptography',
]
dynamic = ['version']

[project.optional-dependencies]
dev = [
    'coverage',
    'pytest',
    'pytest-benchmark'
]

[project.urls]
Homepage = 'https://github.com/ofek/coincurve'
Documentation = 'https://ofek.dev/coincurve/'
Repository = 'https://github.com/ofek/coincurve'
'Bug Tracker' = 'https://github.com/ofek/coincurve/issues'

# --- scikit-build-core ---
[tool.scikit-build]
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"
cmake.verbose = true
logging.level = 'INFO'
wheel.packages = []
cmake.build-type = 'Release'
install.components = ["python"]

# Needed for scikit-build-core to compute the version
[tool.setuptools_scm]

[tool.scikit-build.cmake.define]
# Coincurve build options
COINCURVE_IGNORE_SYSTEM_LIB = 'ON'
COINCURVE_CROSS_HOST = 'OFF'
# SECP256K1 library
SECP256K1_UPSTREAM_URL = 'https://github.com/bitcoin-core/secp256k1/archive/'
SECP256K1_UPSTREAM_REF = {env='COINCURVE_UPSTREAM_REF', default='1ad5185cd42c0636104129fcc9f6a4bf9c67cc40'}
SECP256K1_UPSTREAM_SHA = {env='COINCURVE_UPSTREAM_SHA', default='ba34be4319f505c5766aa80b99cfa696cbb2993bfecf7d7eb8696106c493cb8c'}
# SECP256K1 library build options
SECP256K1_DISABLE_SHARED = {env='COINCURVE_SECP256K1_SHARED', default='OFF'}
SECP256K1_BUILD_BENCHMARK='OFF'
SECP256K1_BUILD_TESTS='OFF'
SECP256K1_ENABLE_MODULE_ECDH='ON'
SECP256K1_ENABLE_MODULE_RECOVERY='ON'
SECP256K1_ENABLE_MODULE_SCHNORRSIG='ON'
SECP256K1_ENABLE_MODULE_EXTRAKEYS='ON'

# --- other tools ---
[tool.pytest.ini_options]
addopts = [
    '--import-mode=importlib',
]
[tool.black]
target-version = ['py38']
line-length = 120
skip-string-normalization = true
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _cffi_build
  | libsecp256k1
  | build
  | dist
)/
  |
(
    setup\.py$
  | _libsecp256k1\.py$
)
'''

[tool.ruff]
target-version = 'py38'
line-length = 120
lint.select = ['A', 'B', 'C', 'E', 'F', 'I', 'M', 'N', 'Q', 'RUF', 'S', 'T', 'U', 'W', 'YTT']
lint.ignore = [
  # Allow non-abstract empty methods in abstract base classes
  'B027',
  # Ignore McCabe complexity
  'C901',
  # Allow boolean positional values in function calls, like `dict.get(... True)`
  'FBT003',
  # Ignore checks for possible passwords
  'S105', 'S106', 'S107',
]
lint.unfixable = [
  # Don't touch unused imports
  'F401',
]
extend-exclude = [
    'tests/conftest.py',
    'libsecp256k1'
]

[tool.ruff.lint.isort]
known-first-party = ['coincurve']

[tool.ruff.lint.flake8-quotes]
inline-quotes = 'single'

[tool.ruff.lint.per-file-ignores]
'setup.py' = ['B', 'C', 'I', 'N', 'U']
# Tests can use assertions
'tests/*' = ['S101']
'tests/**/*' = ['S101']
